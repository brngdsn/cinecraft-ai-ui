{"version":3,"file":"js/scenes.825494e1.js","mappings":"0LACaA,MAAM,4C,GACXC,EAAAA,EAAAA,IAEM,OAFDD,MAAM,aAAW,S,GAAtBE,G,kCADJC,EAAAA,EAAAA,IAIU,UAJVC,EADJC,E,eCCA,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,qSCUI,MAAMC,EAAQC,EAIRC,GAAaC,EAAAA,EAAAA,KAAI,GACjBC,GAAQC,EAAAA,EAAAA,MACRC,EAAgBC,UAClBL,EAAWM,OAAQ,EACfR,EAAMS,eACAL,EAAMM,SAAS,cAAe,CAAEC,cAChCP,EAAMM,SAAS,cAAe,CAAEC,eAEhCP,EAAMM,SAAS,cAAe,CAAEC,QAE1CT,EAAWM,OAAQ,CAAK,E,8YC7BhC,MAAMV,EAAc,EAEpB,Q,miDC8ImBK,EAAAA,EAAAA,IAAK,IAApB,MACMS,GAAQC,EAAAA,EAAAA,MACRT,GAAQC,EAAAA,EAAAA,MAGRS,IADSC,EAAAA,EAAAA,KAAS,IAAMX,EAAMY,QAAQ,aACpBD,EAAAA,EAAAA,KAAS,IAAMX,EAAMY,QAAQ,sBAC/CC,GAAwBF,EAAAA,EAAAA,KAAS,IAAMX,EAAMY,QAAQ,2BACrDE,GAAyBH,EAAAA,EAAAA,KAAS,IAAMX,EAAMY,QAAQ,4BAGtDG,EAAcA,KAChB,MAAMC,EAAMR,EAAMS,OAAOD,IACzBhB,EAAMM,SAAS,cAAe,CAAEU,OAAM,EAGpCE,EAASA,KACXlB,EAAMmB,OAAO,iBAAiB,EAG5BC,EAASA,KACXpB,EAAMmB,OAAO,gBAAgB,EAG3BE,EAAkBC,IACpB,MAAM,KAAEC,EAAI,KAAEC,EAAI,UAAEC,EAAS,cAAEC,GAAkBJ,EACjD,OAAQE,GACJ,IAAK,SAAU,OAAOD,EACtB,IAAK,gBAAiB,OAAOA,EAC7B,IAAK,WAAY,MAAQ,GAAEE,MAAcC,EAAiB,IAAGA,OAAsB,KAAIH,IAC3F,EAGEI,EAAad,GACXA,GAAuBe,OAAOC,UAAYhB,GAAuBe,OAAOC,UAAUC,OAAS,EACpFjB,EAAsBe,MAAMC,SAAS,GAAGN,KAEvC,GAIVQ,EAAqBC,GACnBA,GAAOJ,OAAOC,UAAYG,GAAOJ,OAAOC,UAAUC,OAAS,EACpDE,GAAOJ,OAAOC,SAAS,IAAIN,KAE1B,GAIVU,EAAiBA,CAACD,EAAOE,EAAQ,IAC/BF,GAAOJ,OAAOC,UAAYG,GAAOJ,OAAOC,UAAUC,OAAS,EACpDE,EAAMJ,MAAMC,SAASK,GAAOX,KAE3B,G,OAIhBY,EAAAA,EAAAA,IAAUpB,G,gtECtMd,MAAM,EAAc,EAEpB,O","sources":["webpack://cinecraft-ai-ui-v2/./src/components/SpinningHero.vue","webpack://cinecraft-ai-ui-v2/./src/components/SpinningHero.vue?8e22","webpack://cinecraft-ai-ui-v2/./src/components/CinecraftTileButton.vue","webpack://cinecraft-ai-ui-v2/./src/components/CinecraftTileButton.vue?57aa","webpack://cinecraft-ai-ui-v2/./src/views/ScenesView.vue","webpack://cinecraft-ai-ui-v2/./src/views/ScenesView.vue?fe00"],"sourcesContent":["<template>\r\n    <section class=\"spinning-hero hero is-medium-with-navbar\">\r\n        <div class=\"hero-body\">\r\n\r\n        </div>\r\n    </section>\r\n</template>\r\n\r\n<style lang=\"scss\">\r\n    section.spinning-hero.hero {\r\n        margin-top: 3.25rem;\r\n        background-image: url('/public/3dgifmaker14060.gif');\r\n        background-repeat: no-repeat;\r\n        background-size: 125%;\r\n        background-position: center;\r\n    }\r\n    section.spinning-hero.hero > div.hero-body > div > p.title {\r\n        font-size: 120px;\r\n    }\r\n    section.spinning-hero.hero > div.hero-body > div > p.subtitle {\r\n        font-size: 50px;\r\n    }\r\n    .spinning-hero {\r\n        max-height: 0.5rem;\r\n    }\r\n</style>","import { render } from \"./SpinningHero.vue?vue&type=template&id=481482ed\"\nconst script = {}\n\nimport \"./SpinningHero.vue?vue&type=style&index=0&id=481482ed&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\r\n    <button class=\"button is-small is-link\"\r\n        :class=\"{\r\n            'is-loading is-disabled': is_loading || scene.cdrawing,\r\n            'is-inverted':  !is_loading && !scene.cdrawing,\r\n            'button is-small is-link': !recycle,\r\n            'button is-small is-ghost': recycle\r\n        }\"\r\n        @click=\"cinecraftTile(scene.cid)\"\r\n        >\r\n        <span v-if=\"!recycle\">Cinecraft Tile</span>\r\n        <span v-else><i class=\"fa-solid fa-rotate-right\"></i></span>\r\n    </button>\r\n</template>\r\n\r\n<script setup>\r\n    import { ref, defineProps } from 'vue';\r\n    import { useStore } from 'vuex';\r\n    const props = defineProps({\r\n        scene: Object,\r\n        recycle: Boolean\r\n    });\r\n    const is_loading = ref(false);\r\n    const store = useStore();\r\n    const cinecraftTile = async (cid) => {\r\n        is_loading.value = true;\r\n        if (props.recycle) {\r\n            await store.dispatch('deleteTiles', { cid })\r\n            await store.dispatch('createTiles', { cid })\r\n        } else {\r\n            await store.dispatch('createTiles', { cid })\r\n        }\r\n        is_loading.value = false;\r\n    }\r\n</script>\r\n","import script from \"./CinecraftTileButton.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./CinecraftTileButton.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n    <div>\r\n        <SpinningHero />\r\n        <section class=\"scenes-hero hero is-medium-with-navbar\">\r\n            <div class=\"hero-body\" style=\"padding-top:2.5vh;\">\r\n                <nav class=\"breadcrumb has-arrow-separator is-small\" aria-label=\"breadcrumbs\">\r\n                    <ul>\r\n                        <li><a href=\"/screenwrites\">Screenwrites</a></li>\r\n                        <li><a href=\"#\">{{ scenes_carousel_title?.stitle }}</a></li>\r\n                        <li class=\"is-active\"><a href=\"#\" aria-current=\"page\">{{ get_title(scenes_carousel_title) }}</a></li>\r\n                    </ul>\r\n                </nav>\r\n                <div class=\"columns\">\r\n\r\n                    <!-- LIST -->\r\n                    <div class=\"column is-3\">\r\n                        <div class=\"notification\">\r\n                            <div class=\"block\">\r\n                                <input class=\"input is-fullwidth\" placeholder=\"Search...\" />\r\n                            </div>\r\n                            <div class=\"block\">\r\n                                <nav class=\"pagination is-centered is-small\" role=\"navigation\" aria-label=\"pagination\">\r\n                                    <a href=\"#\" class=\"pagination-previous\">Previous</a>\r\n                                    <a href=\"#\" class=\"pagination-next\">Next page</a>\r\n                                    <!-- <ul class=\"pagination-list\">\r\n                                        <li>\r\n                                            <a href=\"#\" class=\"pagination-link\" aria-label=\"Goto page 1\">1</a>\r\n                                        </li>\r\n                                        <li>\r\n                                            <span class=\"pagination-ellipsis\">&hellip;</span>\r\n                                        </li>\r\n                                        <li>\r\n                                            <a href=\"#\" class=\"pagination-link\" aria-label=\"Goto page 86\">86</a>\r\n                                        </li>\r\n                                    </ul> -->\r\n                                </nav>\r\n                            </div>\r\n                            <div class=\"block\">\r\n                                <table class=\"table is-fullwidth\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Scenes</th>\r\n                                            <th><abbr title=\"\"></abbr></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr v-for=\"(scene, s) in scenes_carousel\" :key=\"s\">\r\n                                            <td>\r\n                                                <a :href=\"`/scene/${scene.cid}`\">{{ get_scene_heading(scene) }}</a>\r\n                                            </td>\r\n                                            <!-- <td>\r\n                                                <DeleteScenewriteButton :scene=\"scene\" />\r\n                                            </td> -->\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                            <!-- <div class=\"block\">\r\n                                <textarea class=\"textarea\" placeholder=\"a film about bunny bugs bunny, mickey mouse, and donald duck\" v-model=\"prompt\"></textarea>\r\n                            </div> -->\r\n                            <div class=\"block\">\r\n                                <a class=\"button is-link is-dark is-focused is-fullwidth\" @click=\"createStoryboards\">\r\n                                    <span>Cinecraft Storyboard</span>\r\n                                    <span class=\"icon\">\r\n                                        <i class=\"fas fa-arrow-right\"></i>\r\n                                    </span>\r\n                                </a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <!-- DETAILS -->\r\n                    <div class=\"column is-two-thirds\">\r\n\r\n                            <div class=\"columns\">\r\n                                <div class=\"column\" :style=\"{ 'margin-left': s === 0 ? '11px' : 'inherit' }\" v-for=\"(scene, s) in scenes_carousel_images\" :key=\"s\">\r\n                                    <div class=\"notification\" :style=\"{\r\n                                        'background-size': 'cover',\r\n                                        'background-position': 'center center',\r\n                                        'background-repeat': 'no-repeat',\r\n                                        'background-image': scene.cimage ? `url('http://10.0.0.198:3000/scenes/${scene.cid}/storyboards/tiles')` : `inherit`\r\n                                    }\">\r\n                                        <div class=\"columns\" :style=\"{\r\n                                                    'height': s === 0 ? '300px' : '225px',\r\n                                                    'width': s === 0 ? '580px' : '275px',}\">\r\n                                            <div class=\"column is-half\">\r\n                                                <div class=\"block\" >\r\n                                                    <span v-if=\"!scene.cimage\">Cinecraft Storyboard Tile</span>\r\n                                                    <span v-else=\"!scene.cimage\">{{ get_scene_text(scene) }}</span>\r\n                                                </div>\r\n                                                <div class=\"block\">\r\n                                                    <CinecraftTileButton :scene=\"scene\" :recycle=\"scene.cimage\" />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div class=\"column is-half\">\r\n                                                <div class=\"block\" style=\"font-size:6px;\" :style=\"{\r\n                                                    'color': ((s === 0) && (scene.cimage)) ? 'rgba(0,0,0,0)' : 'inherit',}\">\r\n                                                    {{ [scene.cid, scene.sid] }} {{ get_scene_text(scene) }}<br /><br />\r\n                                                    {{ get_scene_text(scene, 1) }}...\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <nav class=\"pagination is-centered is-small\" role=\"navigation\" aria-label=\"pagination\">\r\n                                <a href=\"#\" class=\"pagination-previous\" @click=\"onPrev\">Previous</a>\r\n                                <a href=\"#\" class=\"pagination-next\" @click=\"onNext\">Next page</a>\r\n                                <!-- <ul class=\"pagination-list\">\r\n                                    <li>\r\n                                        <a href=\"#\" class=\"pagination-link\" aria-label=\"Goto page 1\">1</a>\r\n                                    </li>\r\n                                    <li>\r\n                                        <span class=\"pagination-ellipsis\">&hellip;</span>\r\n                                    </li>\r\n                                    <li>\r\n                                        <a href=\"#\" class=\"pagination-link\" aria-label=\"Goto page 86\">86</a>\r\n                                    </li>\r\n                                </ul> -->\r\n                            </nav>\r\n\r\n                            <div class=\"column\">\r\n                                <div class=\"block\">\r\n                                    <pre class=\"screenwrite-page\" v-for=\"(element, s) in scenes_carousel_title?.cdata.elements\">{{  getElementText(element)  }}</pre>\r\n                                </div>\r\n                                <div class=\"block\">\r\n                                    <button class=\"button is-info is-inverted\">Like</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </section>\r\n    </div>\r\n</template>\r\n\r\n<script setup>\r\n    import SpinningHero from '@/components/SpinningHero.vue'\r\n    import CinecraftTileButton from '@/components/CinecraftTileButton.vue'\r\n    // import DeleteScreenwriteButton from '@/components/DeleteScreenwriteButton'\r\n    import { computed, ref, onMounted } from 'vue';\r\n    import { useRoute } from 'vue-router';\r\n    import { useStore } from 'vuex';\r\n\r\n    const prompt = ref(``);\r\n    const route = useRoute();\r\n    const store = useStore();\r\n    // Use ref for reactive reference to screenwrite\r\n    const scenes = computed(() => store.getters['scenes']);\r\n    const scenes_carousel = computed(() => store.getters['scenes_carousel']);\r\n    const scenes_carousel_title = computed(() => store.getters['scenes_carousel_title']);\r\n    const scenes_carousel_images = computed(() => store.getters['scenes_carousel_images']);\r\n    \r\n    // Method to dispatch action\r\n    const fetchScenes = () => {\r\n        const sid = route.params.sid;\r\n        store.dispatch('fetchScenes', { sid });\r\n    };\r\n\r\n    const onNext = () => {\r\n        store.commit('ADVANCE_SCENES')\r\n    };\r\n\r\n    const onPrev = () => {\r\n        store.commit('REWIND_SCENES')\r\n    };\r\n\r\n    const getElementText = (element) => {\r\n        const { text, type, character, parenthetical } = element;\r\n        switch (type) {\r\n            case 'action': return text;\r\n            case 'scene_heading': return text;\r\n            case 'dialogue': return `${character}\\n${parenthetical ? `(${parenthetical})\\n` : ``}${text}`;\r\n        }\r\n    };\r\n\r\n    const get_title = (scenes_carousel_title) => {\r\n        if (scenes_carousel_title?.cdata?.elements && scenes_carousel_title?.cdata?.elements?.length > 0) {\r\n            return scenes_carousel_title.cdata.elements[0].text\r\n        } else {\r\n            return ``\r\n        }\r\n    };\r\n\r\n    const get_scene_heading = (scene) => {\r\n        if (scene?.cdata?.elements && scene?.cdata?.elements?.length > 0) {\r\n            return scene?.cdata?.elements[0]?.text\r\n        } else {\r\n            return ``\r\n        }\r\n    };\r\n\r\n    const get_scene_text = (scene, index = 0) => {\r\n        if (scene?.cdata?.elements && scene?.cdata?.elements?.length > 0) {\r\n            return scene.cdata.elements[index].text\r\n        } else {\r\n            return ``\r\n        }\r\n    }\r\n\r\n    onMounted(fetchScenes);\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n    // section.scenes-hero.hero {\r\n    //     margin-top: 3.25rem;\r\n    // }\r\n    .screenwrite-page {\r\n        overflow-x: hidden;\r\n        padding: 1;\r\n        max-width: 600px;\r\n        white-space: break-spaces;\r\n        word-wrap: break;\r\n    }\r\n</style>","import script from \"./ScenesView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./ScenesView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./ScenesView.vue?vue&type=style&index=0&id=ac91999c&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","_createElementVNode","_hoisted_2","_createElementBlock","_hoisted_1","_hoisted_3","script","__exports__","render","props","__props","is_loading","ref","store","useStore","cinecraftTile","async","value","recycle","dispatch","cid","route","useRoute","scenes_carousel","computed","getters","scenes_carousel_title","scenes_carousel_images","fetchScenes","sid","params","onNext","commit","onPrev","getElementText","element","text","type","character","parenthetical","get_title","cdata","elements","length","get_scene_heading","scene","get_scene_text","index","onMounted"],"sourceRoot":""}